/* SPDX-License-Identifier: GPL-2.0+ */
/*
 * Common variables for the Maxim MAX77804K driver
 *
 * Copyright (C) 2011 Samsung Electronics
 * SangYoung Son <hello.son@samsung.com>
 */

#ifndef __MAX77804K_PRIVATE_H_
#define __MAX77804K_PRIVATE_H_

#define MAX77804K_I2C_ADDR_PMIC		(0xCC >> 1)	/* Charger, Flash LED */
#define MAX77804K_I2C_ADDR_MUIC		(0x4A >> 1)
#define MAX77804K_I2C_ADDR_HAPTIC	(0x90 >> 1)

#define MAX77804K_IRQSRC_CHG		BIT(0) // (1 << 0)
#define MAX77804K_IRQSRC_TOP		BIT(1) // (1 << 1)
#define MAX77804K_IRQSRC_FLASH		BIT(2) // (1 << 2)
#define MAX77804K_IRQSRC_MUIC		BIT(3) // (1 << 3)

/* Registers for slave addr 0xCC: Flash LED, PMIC, Charger */
enum max77804k_sys_reg {
	MAX77804K_LED_REG_IFLASH		= 0x00,
	MAX77804K_LED_REG_RESERVED_01		= 0x01,
	MAX77804K_LED_REG_ITORCH		= 0x02,
	MAX77804K_LED_REG_ITORCHTORCHTIMER	= 0x03,
	MAX77804K_LED_REG_FLASH_TIMER		= 0x04,
	MAX77804K_LED_REG_FLASH_EN		= 0x05,
	MAX77804K_LED_REG_MAX_FLASH1		= 0x06,
	MAX77804K_LED_REG_MAX_FLASH2		= 0x07,
	MAX77804K_LED_REG_MAX_FLASH3		= 0x08,
	MAX77804K_LED_REG_MAX_FLASH4		= 0x09,
	MAX77804K_LED_REG_VOUT_CNTL		= 0x0A,
	MAX77804K_LED_REG_VOUT_FLASH		= 0x0B,
	MAX77804K_LED_REG_RESERVED_0C		= 0x0C,
	MAX77804K_LED_REG_RESERVED_0D		= 0x0D,
	MAX77804K_LED_REG_FLASH_INT		= 0x0E,
	MAX77804K_LED_REG_FLASH_INT_MASK	= 0x0F,
	MAX77804K_LED_REG_FLASH_INT_STATUS	= 0x10,
	MAX77804K_LED_REG_RESERVED_11		= 0x11,

	MAX77804K_PMIC_REG_PMIC_ID1		= 0x20,
	MAX77804K_PMIC_REG_PMIC_ID2		= 0x21,
	MAX77804K_PMIC_REG_INTSRC		= 0x22,
	MAX77804K_PMIC_REG_INTSRC_MASK		= 0x23,
	MAX77804K_PMIC_REG_TOPSYS_INT		= 0x24,
	MAX77804K_PMIC_REG_RESERVED_25		= 0x25,
	MAX77804K_PMIC_REG_TOPSYS_INT_MASK	= 0x26,
	MAX77804K_PMIC_REG_RESERVED_27		= 0x27,
	MAX77804K_PMIC_REG_TOPSYS_STAT		= 0x28,
	MAX77804K_PMIC_REG_RESERVED_29		= 0x29,
	MAX77804K_PMIC_REG_MAINCTRL1		= 0x2A,
	MAX77804K_PMIC_REG_LSCNFG		= 0x2B,
	MAX77804K_PMIC_REG_RESERVED_2C		= 0x2C,
	MAX77804K_PMIC_REG_RESERVED_2D		= 0x2D,

	MAX77804K_CHG_REG_CHG_INT		= 0xB0,
	MAX77804K_CHG_REG_CHG_INT_MASK		= 0xB1,
	MAX77804K_CHG_REG_CHG_INT_OK		= 0xB2,
	MAX77804K_CHG_REG_CHG_DTLS_00		= 0xB3,
	MAX77804K_CHG_REG_CHG_DTLS_01		= 0xB4,
	MAX77804K_CHG_REG_CHG_DTLS_02		= 0xB5,
	MAX77804K_CHG_REG_CHG_DTLS_03		= 0xB6,
	MAX77804K_CHG_REG_CHG_CNFG_00		= 0xB7,
	MAX77804K_CHG_REG_CHG_CNFG_01		= 0xB8,
	MAX77804K_CHG_REG_CHG_CNFG_02		= 0xB9,
	MAX77804K_CHG_REG_CHG_CNFG_03		= 0xBA,
	MAX77804K_CHG_REG_CHG_CNFG_04		= 0xBB,
	MAX77804K_CHG_REG_CHG_CNFG_05		= 0xBC,
	MAX77804K_CHG_REG_CHG_CNFG_06		= 0xBD,
	MAX77804K_CHG_REG_CHG_CNFG_07		= 0xBE,
	MAX77804K_CHG_REG_CHG_CNFG_08		= 0xBF,
	MAX77804K_CHG_REG_CHG_CNFG_09		= 0xC0,
	MAX77804K_CHG_REG_CHG_CNFG_10		= 0xC1,
	MAX77804K_CHG_REG_CHG_CNFG_11		= 0xC2,
	MAX77804K_CHG_REG_CHG_CNFG_12		= 0xC3,
	MAX77804K_CHG_REG_CHG_CNFG_13		= 0xC4,
	MAX77804K_CHG_REG_CHG_CNFG_14		= 0xC5,
	MAX77804K_CHG_REG_SAFEOUT_CTRL		= 0xC6,

	MAX77804K_PMIC_REG_END,
};

/* Registers for slave addr 0x4A: MUIC */
enum max77804k_muic_reg {
	MAX77804K_MUIC_REG_ID			= 0x00,
	MAX77804K_MUIC_REG_INT1			= 0x01,
	MAX77804K_MUIC_REG_INT2			= 0x02,
	MAX77804K_MUIC_REG_INT3			= 0x03,
	MAX77804K_MUIC_REG_STATUS1		= 0x04,
	MAX77804K_MUIC_REG_STATUS2		= 0x05,
	MAX77804K_MUIC_REG_STATUS3		= 0x06,
	MAX77804K_MUIC_REG_INTMASK1		= 0x07,
	MAX77804K_MUIC_REG_INTMASK2		= 0x08,
	MAX77804K_MUIC_REG_INTMASK3		= 0x09,
	MAX77804K_MUIC_REG_CDETCTRL1		= 0x0A,
	MAX77804K_MUIC_REG_CDETCTRL2		= 0x0B,
	MAX77804K_MUIC_REG_CTRL1		= 0x0C,
	MAX77804K_MUIC_REG_CTRL2		= 0x0D,
	MAX77804K_MUIC_REG_CTRL3		= 0x0E,
	MAX77804K_MUIC_REG_CTRL4		= 0x16,

	MAX77804K_MUIC_REG_END,
};

/* Registers for slave addr 0x90: Haptic */
enum max77804k_haptic_reg {
	MAX77804K_HAPTIC_REG_STATUS		= 0x00,
	MAX77804K_HAPTIC_REG_CONFIG1		= 0x01,
	MAX77804K_HAPTIC_REG_CONFIG2		= 0x02,
	MAX77804K_HAPTIC_REG_CONFIG_CHNL	= 0x03,
	MAX77804K_HAPTIC_REG_CONFG_CYC1		= 0x04,
	MAX77804K_HAPTIC_REG_CONFG_CYC2		= 0x05,
	MAX77804K_HAPTIC_REG_CONFIG_PER1	= 0x06,
	MAX77804K_HAPTIC_REG_CONFIG_PER2	= 0x07,
	MAX77804K_HAPTIC_REG_CONFIG_PER3	= 0x08,
	MAX77804K_HAPTIC_REG_CONFIG_PER4	= 0x09,
	MAX77804K_HAPTIC_REG_CONFIG_DUTY1	= 0x0A,
	MAX77804K_HAPTIC_REG_CONFIG_DUTY2	= 0x0B,
	MAX77804K_HAPTIC_REG_CONFIG_PWM1	= 0x0C,
	MAX77804K_HAPTIC_REG_CONFIG_PWM2	= 0x0D,
	MAX77804K_HAPTIC_REG_CONFIG_PWM3	= 0x0E,
	MAX77804K_HAPTIC_REG_CONFIG_PWM4	= 0x0F,
	MAX77804K_HAPTIC_REG_REV		= 0x10,

	MAX77804K_HAPTIC_REG_END,
};

/* MAX77804K PMIC TOPSYS interrupt masks */
#define MAX77804K_TOPSYS_IRQ_T120C_MASK		BIT(0)
#define MAX77804K_TOPSYS_IRQ_T140C_MASK		BIT(1)
#define MAX77804K_TOPSYS_IRQLOWSYS_MASK		BIT(3)

/* MAX77804K MUIC interrupt masks - INT 1*/
#define MAX77804K_MUIC_IRQ_INT1_ADC_MASK	BIT(0)
#define MAX77804K_MUIC_IRQ_INT1_ADCLOW_MASK	BIT(1)
#define MAX77804K_MUIC_IRQ_INT1_ADCERR_MASK	BIT(2)
#define MAX77804K_MUIC_IRQ_INT1_ADC1K_MASK	BIT(3)
/* MAX77804K MUIC interrupt masks - INT 2 */
#define MAX77804K_MUIC_IRQ_INT2_CHGTYP_MASK	BIT(0)
#define MAX77804K_MUIC_IRQ_INT2_CHGDETREUN_MASK	BIT(1)
#define MAX77804K_MUIC_IRQ_INT2_DCDTMR_MASK	BIT(2)
#define MAX77804K_MUIC_IRQ_INT2_DXOVP_MASK	BIT(3)
#define MAX77804K_MUIC_IRQ_INT2_VBVOLT_MASK	BIT(4)
#define MAX77804K_MUIC_IRQ_INT2_VIDRM_MASK	BIT(5)
/* MAX77804K MUIC interrupt masks - INT 3 */
#define MAX77804K_MUIC_IRQ_INT3_EOC_MASK	BIT(0)
#define MAX77804K_MUIC_IRQ_INT3_CGMBC_MASK	BIT(1)
#define MAX77804K_MUIC_IRQ_INT3_OVP_MASK	BIT(2)
#define MAX77804K_MUIC_IRQ_INT3_MBCCHGERR_MASK	BIT(3)
#define MAX77804K_MUIC_IRQ_INT3_CHGENABLED_MASK	BIT(4)
#define MAX77804K_MUIC_IRQ_INT3_BATDET_MASK	BIT(5)

/* MAX77804K MUIC STATUS1 register */
#define MAX77804K_MUIC_STATUS1_ADC_SHIFT	0
#define MAX77804K_MUIC_STATUS1_ADCLOW_SHIFT	5
#define MAX77804K_MUIC_STATUS1_ADCERR_SHIFT	6
#define MAX77804K_MUIC_STATUS1_ADC1K_SHIFT	7
#define MAX77804K_MUIC_STATUS1_ADC_MASK		(0x1f << MAX77804K_MUIC_STATUS1_ADC_SHIFT)
#define MAX77804K_MUIC_STATUS1_ADCLOW_MASK	(0x1 << MAX77804K_MUIC_STATUS1_ADCLOW_SHIFT)
#define MAX77804K_MUIC_STATUS1_ADCERR_MASK	(0x1 << MAX77804K_MUIC_STATUS1_ADCERR_SHIFT)
#define MAX77804K_MUIC_STATUS1_ADC1K_MASK	(0x1 << MAX77804K_MUIC_STATUS1_ADC1K_SHIFT)
/* MAX77804K MUIC STATUS2 register */
#define MAX77804K_MUIC_STATUS2_CHGTYP_SHIFT	0
#define MAX77804K_MUIC_STATUS2_CHGDETRUN_SHIFT	3
#define MAX77804K_MUIC_STATUS2_DXOVP_SHIFT	5
#define MAX77804K_MUIC_STATUS2_VBVOLT_SHIFT	6
#define MAX77804K_MUIC_STATUS2_CHGTYP_MASK	(0x7 << MAX77804K_MUIC_STATUS2_CHGTYP_SHIFT)
#define MAX77804K_MUIC_STATUS2_CHGDETRUN_MASK	(0x1 << MAX77804K_MUIC_STATUS2_CHGDETRUN_SHIFT)
#define MAX77804K_MUIC_STATUS2_DXOVP_MASK	(0x1 << MAX77804K_MUIC_STATUS2_DXOVP_SHIFT)
#define MAX77804K_MUIC_STATUS2_VBVOLT_MASK	(0x1 << MAX77804K_MUIC_STATUS2_VBVOLT_SHIFT)
/* MAX77804K MUIC CONTROL3 register */
#define MAX77804K_MUIC_CTRL3_JIGSET_SHIFT	0
#define MAX77804K_MUIC_CTRL3_BOOTSET_SHIFT	2
#define MAX77804K_MUIC_CTRL3_ADCDBSET_SHIFT	4
#define MAX77804K_MUIC_CTRL3_JIGSET_MASK	(0x3 << MAX77804K_MUIC_CTRL3_JIGSET_SHIFT)
#define MAX77804K_MUIC_CTRL3_BOOTSET_MASK	(0x3 << MAX77804K_MUIC_CTRL3_BOOTSET_SHIFT)
#define MAX77804K_MUIC_CTRL3_ADCDBSET_MASK	(0x3 << MAX77804K_MUIC_CTRL3_ADCDBSET_SHIFT)
/* MAX77804 MUIC CONTROL4 register */
#define MAX77804K_MUIC_CTRL4_ADCMODE_SHIFT	6
#define MAX77804K_MUIC_CTRL4_ADCDBSET_SHIFT	0
#define MAX77804K_MUIC_CTRL4_ADCMODE_MASK	(0x3 << MAX77804K_MUIC_CTRL4_ADCMODE_SHIFT)
#define MAX77804K_MUIC_CTRL4_ADCDBSET_MASK	(0x3 << MAX77804K_MUIC_CTRL4_ADCDBSET_SHIFT)

#endif /* __MAX77804K_PRIVATE_H_ */
